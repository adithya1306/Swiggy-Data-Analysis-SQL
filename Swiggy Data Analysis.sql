# Finding names of customers who have never ordered till date

SELECT NAME 
FROM USERS U
WHERE USER_ID NOT IN
(SELECT USER_ID FROM ORDERS);

# Finding average price for each item in the menu

SELECT F_NAME, AVG(PRICE)
FROM MENU M
JOIN FOOD F 
ON F.F_ID = M.F_ID
GROUP BY F_NAME;

# Orders for each restaurant on a monthly basis

SELECT R_NAME, COUNT(ORDER_ID) AS ORDERS_PLACED, MONTHNAME(DATE) AS MONTH
FROM RESTAURANTS R
JOIN ORDERS O
ON O.R_ID = R.R_ID
GROUP BY R_NAME;

# Finding total revenue for each restaurant

SELECT R_NAME,SUM(AMOUNT) AS REVENUE
FROM ORDERS O
JOIN RESTAURANTS R
ON R.R_ID = O.R_ID
GROUP BY R_NAME;

# Show all orders with order details for a particular customer

SELECT ORDER_ID,R_NAME,F_NAME
FROM RESTAURANTS R
JOIN ORDERS O 
ON O.R_ID = R.R_ID
JOIN MENU M
ON M.R_ID = R.R_ID
JOIN FOOD F
ON F.F_ID = M.F_ID
WHERE USER_ID = (SELECT USER_ID FROM USERS WHERE NAME LIKE 'Khushboo');

# Finding favorite food of customers

WITH FAV AS
(
SELECT NAME,F_NAME,COUNT(*) as FREQ
FROM USERS U
JOIN ORDERS O ON O.USER_ID = U.USER_ID
JOIN RESTAURANTS R ON R.R_ID = O.R_ID
JOIN ORDER_DETAILS OD ON OD.ORDER_ID = O.ORDER_ID
JOIN FOOD F ON F.F_ID = OD.F_ID
GROUP BY NAME,F_NAME
ORDER BY NAME
)
SELECT NAME,F_NAME
FROM FAV F
WHERE FREQ = (SELECT MAX(FREQ) FROM FAV G WHERE F.NAME = G.NAME);

# Finding  most loyal customers for all restaurant

WITH FAV AS
(
SELECT R_NAME,NAME,COUNT(*) AS FREQ FROM ORDERS O
JOIN RESTAURANTS R
ON R.R_ID = O.R_ID
JOIN USERS U
ON U.USER_ID = O.USER_ID
GROUP BY R_NAME,NAME
ORDER BY R_NAME
)
SELECT R_NAME,NAME,FREQ
FROM FAV F
WHERE FREQ = (SELECT MAX(FREQ) FROM FAV G WHERE F.R_NAME = G.R_NAME);

#Restaurants with repeated customers

SELECT R_NAME,COUNT(REP) LOYAL_CUSTOMERS
FROM 
(
SELECT R_NAME,USER_ID,COUNT(*) AS REP
FROM ORDERS O
JOIN RESTAURANTS R
ON R.R_ID = O.R_ID
GROUP BY R_NAME,USER_ID
HAVING REP > 1
ORDER BY R_NAME
)P
GROUP BY R_NAME
ORDER BY LOYAL_CUSTOMERS;
